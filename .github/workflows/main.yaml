name: Chatapplication-CI

on:
  push:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: self-hosted
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        sudo apt-get install libpq-dev -y
        python3.10 -m pip install --upgrade pip
        sudo apt install python3.10-venv -y
        sudo apt-get update
        sudo apt-get install build-essential -y
        sudo apt-get install libpq-dev -y
        sudo apt-get install gcc -y
        python3.10 -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        python manage.py makemigrations
        python manage.py migrate
        python manage.py test
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

    - name: Restart service
      run: |
        whoami
        sudo systemctl daemon-reload
        sudo systemctl enable daphne
        sudo systemctl restart daphne

  # deploy:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #   - name: testing the script
  #     run: python --version
  #   - name: Run Python Command in AWS
  #     env:  
  #       AWS_SSH_KEY: ${{ secrets.SSH_KEY }}
  #     run: |
  #       # Use the private key for SSH authentication
  #       mkdir -p ~/.ssh
  #       echo "$AWS_SSH_KEY" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa
  #       # Example: Run a Python script on an EC2 instance using SSH 
  #       ssh-keyscan 65.0.203.252 >> ~/.ssh/known_hosts
  #       ssh -i ~/.ssh/id_rsa ubuntu@65.0.203.252 "source /home/ubuntu/actions-runner/setENV.sh"

